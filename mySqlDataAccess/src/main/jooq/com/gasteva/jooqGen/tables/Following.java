/*
 * This file is generated by jOOQ.
*/
package com.gasteva.jooqGen.tables;


import com.gasteva.jooqGen.Litteltwitter;
import com.gasteva.jooqGen.tables.records.FollowingRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Following extends TableImpl<FollowingRecord> {

    private static final long serialVersionUID = 946700243;

    /**
     * The reference instance of <code>litteltwitter.following</code>
     */
    public static final Following FOLLOWING = new Following();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FollowingRecord> getRecordType() {
        return FollowingRecord.class;
    }

    /**
     * The column <code>litteltwitter.following.OriginID</code>.
     */
    public final TableField<FollowingRecord, Integer> ORIGINID = createField("OriginID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>litteltwitter.following.FollowID</code>.
     */
    public final TableField<FollowingRecord, Integer> FOLLOWID = createField("FollowID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>litteltwitter.following</code> table reference
     */
    public Following() {
        this("following", null);
    }

    /**
     * Create an aliased <code>litteltwitter.following</code> table reference
     */
    public Following(String alias) {
        this(alias, FOLLOWING);
    }

    private Following(String alias, Table<FollowingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Following(String alias, Table<FollowingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Litteltwitter.LITTELTWITTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Following as(String alias) {
        return new Following(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Following rename(String name) {
        return new Following(name, null);
    }
}
